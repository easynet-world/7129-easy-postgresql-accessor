name: PostgreSQL Data Accessor CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --ignore-scripts
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm test
    
    - name: Generate coverage report
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci --ignore-scripts
    
    - name: Build package
      run: npm run build
    
    - name: Check if version exists on npm
      id: check-version
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "Current version: $CURRENT_VERSION"
        
        # Check if version exists on npm
        if npm view postgresql-data-accessor@$CURRENT_VERSION > /dev/null 2>&1; then
          echo "Version $CURRENT_VERSION already exists on npm"
          echo "should_publish=false" >> $GITHUB_OUTPUT
        else
          echo "Version $CURRENT_VERSION does not exist on npm"
          echo "should_publish=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Publish to NPM
      if: steps.check-version.outputs.should_publish == 'true'
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Skip publishing
      if: steps.check-version.outputs.should_publish == 'false'
      run: echo "Skipping publish - version already exists on npm"
